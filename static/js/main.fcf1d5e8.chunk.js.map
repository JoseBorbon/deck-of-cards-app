{"version":3,"sources":["Card.jsx","Deck.jsx","App.js","index.js"],"names":["Card","props","angle","Math","random","xPos","yPos","_transform","className","src","this","imageUrl","alt","altText","style","transform","Component","API_BASE_URL","Deck","state","deck","drawnCards","isOut","drawCard","bind","a","length","axios","get","setState","data","id","deck_id","card","success","Error","cards","st","code","image","value","suit","map","display","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yWAyBeA,E,kDArBb,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAIC,EAAwB,GAAhBC,KAAKC,SAAgB,GAC7BC,EAAuB,GAAhBF,KAAKC,SAAgB,GAC5BE,EAAuB,GAAhBH,KAAKC,SAAgB,GAJf,OAKjB,EAAKG,WAAL,oBAA+BF,EAA/B,eAA0CC,EAA1C,sBAA4DJ,EAA5D,QALiB,E,0CAOnB,WACE,OACE,qBACEM,UAAU,OACVC,IAAKC,KAAKT,MAAMU,SAChBC,IAAKF,KAAKT,MAAMY,QAChBC,MAAO,CACLC,UAAWL,KAAKH,kB,GAfPS,aCCbC,G,MAAe,wCAEfC,E,kDACJ,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CAAEC,KAAM,KAAMC,WAAY,GAAIC,OAAO,GAClD,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAHC,E,4FAMnB,4BAAAC,EAAA,yDACuC,IAAjCf,KAAKS,MAAME,WAAWK,OAD5B,gCAEqBC,IAAMC,IAAN,UAAaX,EAAb,gBAFrB,OAEQG,EAFR,OAGIV,KAAKmB,SAAS,CACZT,KAAMA,EAAKU,OAJjB,gD,mHASA,8BAAAL,EAAA,sEAEqBM,EAAOrB,KAAKS,MAAMC,KAA3BY,QAFZ,SAGqBL,IAAMC,IAAN,UAAaX,EAAec,EAA5B,WAHrB,WAGQE,EAHR,QAIcH,KAAKI,QAJnB,sBAKY,IAAIC,MAAM,gBALtB,OAOIF,EAAOA,EAAKH,KAAKM,MAAM,GACvB1B,KAAKmB,UAAS,SAACQ,GACb,MAAO,CACLhB,WAAW,GAAD,mBACLgB,EAAGhB,YADE,CAER,CACEU,GAAIE,EAAKK,KACTC,MAAON,EAAKM,MACZ1B,QAAQ,GAAD,OAAKoB,EAAKO,MAAV,eAAsBP,EAAKQ,aAf9C,kDAqBI/B,KAAKmB,SAAS,CAAEP,OAAO,IArB3B,0D,0EAyBA,WACE,IAAMc,EAAQ1B,KAAKS,MAAME,WAAWqB,KAAI,gBAAGX,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,MAAO1B,EAAd,EAAcA,QAAd,OACtC,cAAC,EAAD,CAAMF,SAAU4B,EAAO1B,QAASA,GAAckB,MAE1CY,EAAUjC,KAAKS,MAAMG,MACzB,oBAAId,UAAU,eAAd,0BAEA,wBAAQA,UAAU,cAAcoC,QAASlC,KAAKa,SAA9C,0BAIF,OACE,8BACE,gCACE,oBAAIf,UAAU,aAAd,yBACCmC,EACD,qBAAKnC,UAAU,aAAf,SAA6B4B,a,GAzDpBpB,aAgEJE,I,MC3DA2B,MARf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fcf1d5e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Card.css';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    let angle = Math.random() * 90 - 45;\n    let xPos = Math.random() * 40 - 20;\n    let yPos = Math.random() * 40 - 20;\n    this._transform = `translate(${xPos}px, ${yPos}px) rotate(${angle}deg)`;\n  }\n  render() {\n    return (\n      <img\n        className=\"Card\"\n        src={this.props.imageUrl}\n        alt={this.props.altText}\n        style={{\n          transform: this._transform,\n        }}\n      />\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport './Deck.css';\nconst API_BASE_URL = 'https://deckofcardsapi.com/api/deck/';\n\nclass Deck extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { deck: null, drawnCards: [], isOut: false };\n    this.drawCard = this.drawCard.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.state.drawnCards.length === 0) {\n      let deck = await axios.get(`${API_BASE_URL}new/shuffle`);\n      this.setState({\n        deck: deck.data,\n      });\n    }\n  }\n\n  async drawCard() {\n    try {\n      const { deck_id: id } = this.state.deck;\n      let card = await axios.get(`${API_BASE_URL + id}/draw/`);\n      if (!card.data.success) {\n        throw new Error('ALL OUT BUB!');\n      }\n      card = card.data.cards[0];\n      this.setState((st) => {\n        return {\n          drawnCards: [\n            ...st.drawnCards,\n            {\n              id: card.code,\n              image: card.image,\n              altText: `${card.value} of ${card.suit}`,\n            },\n          ],\n        };\n      });\n    } catch (err) {\n      this.setState({ isOut: true });\n    }\n  }\n\n  render() {\n    const cards = this.state.drawnCards.map(({ id, image, altText }) => (\n      <Card imageUrl={image} altText={altText} key={id} />\n    ));\n    const display = this.state.isOut ? (\n      <h1 className=\"Deck-all-out\">All Out Bub!</h1>\n    ) : (\n      <button className=\"Deck-button\" onClick={this.drawCard}>\n        GIMME A CARD\n      </button>\n    );\n    return (\n      <div>\n        <div>\n          <h1 className=\"Deck-title\">Card Dealer</h1>\n          {display}\n          <div className=\"Deck-cards\">{cards}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Deck;\n","import Deck from './Deck';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Deck />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}